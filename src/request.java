// GUI and window-related imports
import java.awt.Color;               // Used for setting component colors
import java.awt.Toolkit;            // Used for getting the default toolkit (e.g., for screen dimensions, icons)
import java.awt.event.WindowEvent;  // Used to handle window-related events (like window closing)

import javax.swing.JOptionPane;     // Provides standard dialog boxes like message, confirm, input
import java.sql.*;                  // Database connectivity
import java.time.LocalDateTime;     // Represents date-time without timezone (used for current timestamps)
import java.util.regex.Matcher;     // Used to match patterns in strings (via regex)
import java.util.regex.Pattern;     // Used to define regex patterns
import javax.swing.table.DefaultTableModel; // Default model for JTable, handles table data
import javax.swing.JTable;                  // JTable class for displaying tabular data




public class request extends javax.swing.JFrame {

    /**
     * Creates new form request
     */

    Color DefaultColor, ClickedColor;
    public request() {
        initComponents();
            DefaultColor = new Color(254,247,231);
            ClickedColor = new Color(239,123,82);
            dash.setBackground(DefaultColor);
            lockerlist.setBackground(DefaultColor);
            logout.setBackground(DefaultColor);
            users.setBackground(DefaultColor);
            request.setBackground(ClickedColor);
        
       loadLockerRequests();
   
    }
     public void close(){
    WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
            
    } 
     
  // Loads locker request data from the database into the JTable
private void loadLockerRequests() {
    try {
        // Get a connection to the database
        Connection con = DatabaseConnection.getConnection();

        // SQL query to fetch all locker request fields
        String query = "SELECT id, locker_number, locker_class, price, full_name, duration, course, request_date FROM locker_request";

        // Create a Statement to execute the query
        Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery(query);

        // Get the table model from jTable1
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Clear existing rows in the table
        model.setRowCount(0);

        // Loop through the result set and add each row to the table
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("id"),
                rs.getString("locker_number"),
                rs.getString("locker_class"),
                rs.getDouble("price"),
                rs.getString("full_name"),
                rs.getString("duration"),
                rs.getString("course"),
                rs.getString("request_date")
            });
        }

        // Automatically adjust column widths to fit the content
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        // Close the result set, statement, and connection
        rs.close();
        stmt.close();
        con.close();

    } catch (SQLException ex) {
        // Show an error message if something goes wrong
        JOptionPane.showMessageDialog(this, "Error loading data: " + ex.getMessage());
    }
}

    
 // Deletes the selected row from the JTable and the database (used for Accept button)
private void deleteUser() {
    // Get the selected row index
    int row = jTable1.getSelectedRow();
    
    // If no row is selected, exit the method
    if (row == -1) return;

    // Get the 'id' from the first column of the selected row
    int id = (int) jTable1.getValueAt(row, 0);

    try (
        // Establish a connection to the database
        Connection con = DatabaseConnection.getConnection();
        
        // Prepare the SQL delete statement
        PreparedStatement ps = con.prepareStatement("DELETE FROM locker_request WHERE id = ?")
    ) {
        // Set the ID parameter in the query
        ps.setInt(1, id);

        // Execute the delete operation in the database
        ps.executeUpdate();

        // Remove the row from the JTable model
        ((DefaultTableModel) jTable1.getModel()).removeRow(row);

    } catch (SQLException e) {
        // Print the error if something goes wrong (optional logging)
        e.printStackTrace();
    }
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lockerlist = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        dash = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        logout = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        users = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        request = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        confirmbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(254, 247, 231));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icLogo.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 50, 60);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 53, 82));
        jLabel2.setText("LOCKER ");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(60, 20, 50, 20);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 53, 82));
        jLabel3.setText("MANAGEMENT");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(60, 40, 90, 20);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 53, 82));
        jLabel4.setText("SYSTEM");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(60, 60, 60, 20);

        lockerlist.setBackground(new java.awt.Color(254, 247, 231));
        lockerlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lockerlistMouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/locker.png"))); // NOI18N

        jLabel16.setBackground(new java.awt.Color(239, 123, 82));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 53, 82));
        jLabel16.setText(" Locker list");

        javax.swing.GroupLayout lockerlistLayout = new javax.swing.GroupLayout(lockerlist);
        lockerlist.setLayout(lockerlistLayout);
        lockerlistLayout.setHorizontalGroup(
            lockerlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lockerlistLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        lockerlistLayout.setVerticalGroup(
            lockerlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lockerlistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lockerlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(lockerlist);
        lockerlist.setBounds(0, 180, 160, 40);

        dash.setBackground(new java.awt.Color(254, 247, 231));
        dash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashMouseClicked(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dashboard.png"))); // NOI18N

        jLabel19.setBackground(new java.awt.Color(254, 247, 231));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 53, 82));
        jLabel19.setText(" Dashboard");

        javax.swing.GroupLayout dashLayout = new javax.swing.GroupLayout(dash);
        dash.setLayout(dashLayout);
        dashLayout.setHorizontalGroup(
            dashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dashLayout.setVerticalGroup(
            dashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(dash);
        dash.setBounds(0, 130, 160, 42);

        logout.setBackground(new java.awt.Color(254, 247, 231));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout..png"))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 53, 82));
        jLabel21.setText("Logout");

        javax.swing.GroupLayout logoutLayout = new javax.swing.GroupLayout(logout);
        logout.setLayout(logoutLayout);
        logoutLayout.setHorizontalGroup(
            logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        logoutLayout.setVerticalGroup(
            logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(logout);
        logout.setBounds(0, 330, 160, 40);

        users.setBackground(new java.awt.Color(254, 247, 231));
        users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 53, 82));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/users.png"))); // NOI18N
        jLabel14.setText("  Users");

        javax.swing.GroupLayout usersLayout = new javax.swing.GroupLayout(users);
        users.setLayout(usersLayout);
        usersLayout.setHorizontalGroup(
            usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        usersLayout.setVerticalGroup(
            usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.add(users);
        users.setBounds(0, 230, 160, 40);

        request.setBackground(new java.awt.Color(254, 247, 231));
        request.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestMouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 53, 82));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-request-feedback-48.png"))); // NOI18N
        jLabel15.setText("  Request");

        javax.swing.GroupLayout requestLayout = new javax.swing.GroupLayout(request);
        request.setLayout(requestLayout);
        requestLayout.setHorizontalGroup(
            requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        requestLayout.setVerticalGroup(
            requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.add(request);
        request.setBounds(0, 280, 160, 40);

        jPanel3.setBackground(new java.awt.Color(253, 217, 160));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setForeground(new java.awt.Color(0, 53, 82));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 53, 82));
        jLabel7.setText("Locker Request ");

        jSeparator2.setForeground(new java.awt.Color(0, 53, 82));

        jTable1.setBackground(new java.awt.Color(253, 217, 160));
        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Number", "Class", "Price", "Name", "Duration", "Course", "Request date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        confirmbtn.setBackground(new java.awt.Color(0, 53, 82));
        confirmbtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        confirmbtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmbtn.setText("Accept");
        confirmbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(177, 177, 177))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(confirmbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confirmbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1639, 1639, 1639))
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(160, 0, 640, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lockerlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockerlistMouseClicked
        close();
        admin_lockerlist list = new admin_lockerlist();
        list.setVisible(true);
        list.pack();
        list.setLocationRelativeTo(null);
        dash.setBackground(DefaultColor);
        lockerlist.setBackground(ClickedColor);
        logout.setBackground(DefaultColor);
        users.setBackground(DefaultColor);
        request.setBackground(DefaultColor);
    }//GEN-LAST:event_lockerlistMouseClicked

    private void dashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashMouseClicked

         close();
        Admin_Dashboard dashboard = new Admin_Dashboard();
        dashboard.setVisible(true);
        dashboard.pack();
        dashboard.setLocationRelativeTo(null);
        dash.setBackground(ClickedColor);
        lockerlist.setBackground(DefaultColor);
        logout.setBackground(DefaultColor);
        users.setBackground(DefaultColor);
        request.setBackground(DefaultColor);
    }//GEN-LAST:event_dashMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        dash.setBackground(DefaultColor);
        lockerlist.setBackground(DefaultColor);
        logout.setBackground(ClickedColor);
        users.setBackground(DefaultColor);
        request.setBackground(DefaultColor);
        int confirm =JOptionPane.showConfirmDialog (this, "Are you sure you want to logout?", "Logout confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm==JOptionPane.YES_OPTION){
            close();
            HomePage home = new HomePage();
            home.setVisible(true);
            home.pack();
            home.setLocationRelativeTo(null);
        }
        else{
            JOptionPane.showMessageDialog(this, "Logout cancelled!", "Cancel", JOptionPane.INFORMATION_MESSAGE);
            dash.setBackground(DefaultColor);
            lockerlist.setBackground(DefaultColor);
            logout.setBackground(DefaultColor);
            users.setBackground(DefaultColor);
            request.setBackground(ClickedColor);
        }
    }//GEN-LAST:event_logoutMouseClicked

    private void usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersMouseClicked
       
         close();
        users user = new users();
        user.setVisible(true);
        user.pack();
        user.setLocationRelativeTo(null);
        dash.setBackground(DefaultColor);
        lockerlist.setBackground(DefaultColor);
        logout.setBackground(DefaultColor);
        users.setBackground(ClickedColor);
        request.setBackground(DefaultColor);

    }//GEN-LAST:event_usersMouseClicked

    private void requestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestMouseClicked
        dash.setBackground(DefaultColor);
        lockerlist.setBackground(DefaultColor);
        logout.setBackground(DefaultColor);
        users.setBackground(DefaultColor);
        request.setBackground(ClickedColor);
    }//GEN-LAST:event_requestMouseClicked

    private void confirmbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmbtnActionPerformed
                                 
   // Get the selected row index from the table
int selectedRow = jTable1.getSelectedRow();

// Proceed only if a row is selected
if (selectedRow != -1) {
    try {
        // Extract values from the selected row in the table
        int id = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
        String lockerNumber = jTable1.getValueAt(selectedRow, 1).toString();
        String lockerClass = jTable1.getValueAt(selectedRow, 2).toString();
        double price = Double.parseDouble(jTable1.getValueAt(selectedRow, 3).toString());
        String fullName = jTable1.getValueAt(selectedRow, 4).toString();
        String durationStr = jTable1.getValueAt(selectedRow, 5).toString();
        String course = jTable1.getValueAt(selectedRow, 6).toString();


        // Initialize duration components
        int months = 0;
        int days = 0;

        // Use regex to parse duration string like "2 month(s), 5 day(s)"
        Pattern pattern = Pattern.compile("(\\d+) month\\(s\\), (\\d+) day\\(s\\)");
        Matcher matcher = pattern.matcher(durationStr);

        if (matcher.matches()) {
            // Extract number of months and days from the matched groups
            months = Integer.parseInt(matcher.group(1));
            days = Integer.parseInt(matcher.group(2));
        } else {
            // Handle invalid format
            JOptionPane.showMessageDialog(this, "Invalid duration format: " + durationStr);
            return;
        }

        // Get current date and time
        LocalDateTime now = LocalDateTime.now();

        // Calculate due date by adding parsed months and days
        LocalDateTime dueDate = now.plusMonths(months).plusDays(days);

        // Establish database connection
        try (Connection con = DatabaseConnection.getConnection()) {
            // Insert accepted request into the locker_list table
            String insertQuery = "INSERT INTO locker_list (locker_number, locker_class, price, full_name, course, date_occupied, due_date) VALUES (?, ?, ?, ?, ?, ?, ?)";
            
            try (PreparedStatement pst2 = con.prepareStatement(insertQuery)) {
                pst2.setString(1, lockerNumber);
                pst2.setString(2, lockerClass);
                pst2.setDouble(3, price);
                pst2.setString(4, fullName);
                pst2.setString(5, course);
                pst2.setTimestamp(6, Timestamp.valueOf(now));
                pst2.setTimestamp(7, Timestamp.valueOf(dueDate));
                pst2.executeUpdate();
            }

            // Notify user of successful confirmation
            JOptionPane.showMessageDialog(this, "Locker request has been confirmed.", "Info", JOptionPane.INFORMATION_MESSAGE);

            // Call method to delete the request from the request table
            deleteUser();
        }
    } catch (SQLException e) {
        // Handle SQL-related errors
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage());
    } catch (Exception e) {
        // Handle general exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
} else {
    // Inform user that no row was selected
    JOptionPane.showMessageDialog(this, "Please select a row.");
}


    }//GEN-LAST:event_confirmbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
     
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new request().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmbtn;
    private javax.swing.JPanel dash;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel lockerlist;
    private javax.swing.JPanel logout;
    private javax.swing.JPanel request;
    private javax.swing.JPanel users;
    // End of variables declaration//GEN-END:variables
}
